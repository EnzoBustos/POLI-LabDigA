// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "04/20/2022 09:51:36"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Exp04_Cont2 (
	Q0,
	CLK,
	Q1,
	Q2,
	Q3);
output 	Q0;
input 	CLK;
output 	Q1;
output 	Q2;
output 	Q3;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q0~output_o ;
wire \Q1~output_o ;
wire \Q2~output_o ;
wire \Q3~output_o ;
wire \CLK~input_o ;
wire \inst|sub|126~0_combout ;
wire \inst|sub|122~q ;
wire \inst|sub|137~combout ;
wire \inst|sub|134~q ;
wire \inst|sub|115~combout ;
wire \inst|sub|111~q ;
wire \inst|sub|68~combout ;
wire \inst|sub|34~q ;


cyclonev_io_obuf \Q0~output (
	.i(\inst|sub|34~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q0~output_o ),
	.obar());
// synopsys translate_off
defparam \Q0~output .bus_hold = "false";
defparam \Q0~output .open_drain_output = "false";
defparam \Q0~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q1~output (
	.i(\inst|sub|111~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q1~output_o ),
	.obar());
// synopsys translate_off
defparam \Q1~output .bus_hold = "false";
defparam \Q1~output .open_drain_output = "false";
defparam \Q1~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q2~output (
	.i(\inst|sub|122~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q2~output_o ),
	.obar());
// synopsys translate_off
defparam \Q2~output .bus_hold = "false";
defparam \Q2~output .open_drain_output = "false";
defparam \Q2~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q3~output (
	.i(\inst|sub|134~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q3~output_o ),
	.obar());
// synopsys translate_off
defparam \Q3~output .bus_hold = "false";
defparam \Q3~output .open_drain_output = "false";
defparam \Q3~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|sub|126~0 (
// Equation(s):
// \inst|sub|126~0_combout  = (!\inst|sub|111~q  & (((\inst|sub|122~q )))) # (\inst|sub|111~q  & (!\inst|sub|134~q  & (!\inst|sub|34~q  $ (!\inst|sub|122~q ))))

	.dataa(!\inst|sub|34~q ),
	.datab(!\inst|sub|111~q ),
	.datac(!\inst|sub|122~q ),
	.datad(!\inst|sub|134~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|sub|126~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|sub|126~0 .extended_lut = "off";
defparam \inst|sub|126~0 .lut_mask = 64'h1E0C1E0C1E0C1E0C;
defparam \inst|sub|126~0 .shared_arith = "off";
// synopsys translate_on

dffeas \inst|sub|122 (
	.clk(\CLK~input_o ),
	.d(\inst|sub|126~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|122~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|122 .is_wysiwyg = "true";
defparam \inst|sub|122 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst|sub|137 (
// Equation(s):
// \inst|sub|137~combout  = (!\inst|sub|111~q  & (((\inst|sub|134~q )))) # (\inst|sub|111~q  & (\inst|sub|34~q  & (\inst|sub|122~q  & !\inst|sub|134~q )))

	.dataa(!\inst|sub|34~q ),
	.datab(!\inst|sub|111~q ),
	.datac(!\inst|sub|122~q ),
	.datad(!\inst|sub|134~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|sub|137~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|sub|137 .extended_lut = "off";
defparam \inst|sub|137 .lut_mask = 64'h01CC01CC01CC01CC;
defparam \inst|sub|137 .shared_arith = "off";
// synopsys translate_on

dffeas \inst|sub|134 (
	.clk(\CLK~input_o ),
	.d(\inst|sub|137~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|134~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|134 .is_wysiwyg = "true";
defparam \inst|sub|134 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst|sub|115 (
// Equation(s):
// \inst|sub|115~combout  = (!\inst|sub|34~q  & (\inst|sub|111~q  & !\inst|sub|134~q )) # (\inst|sub|34~q  & (!\inst|sub|111~q ))

	.dataa(!\inst|sub|34~q ),
	.datab(!\inst|sub|111~q ),
	.datac(!\inst|sub|134~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|sub|115~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|sub|115 .extended_lut = "off";
defparam \inst|sub|115 .lut_mask = 64'h6464646464646464;
defparam \inst|sub|115 .shared_arith = "off";
// synopsys translate_on

dffeas \inst|sub|111 (
	.clk(\CLK~input_o ),
	.d(\inst|sub|115~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|111~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|111 .is_wysiwyg = "true";
defparam \inst|sub|111 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst|sub|68 (
// Equation(s):
// \inst|sub|68~combout  = (!\inst|sub|34~q  & ((!\inst|sub|111~q ) # (!\inst|sub|134~q )))

	.dataa(!\inst|sub|34~q ),
	.datab(!\inst|sub|111~q ),
	.datac(!\inst|sub|134~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|sub|68~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|sub|68 .extended_lut = "off";
defparam \inst|sub|68 .lut_mask = 64'hA8A8A8A8A8A8A8A8;
defparam \inst|sub|68 .shared_arith = "off";
// synopsys translate_on

dffeas \inst|sub|34 (
	.clk(\CLK~input_o ),
	.d(\inst|sub|68~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|34~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|34 .is_wysiwyg = "true";
defparam \inst|sub|34 .power_up = "low";
// synopsys translate_on

assign Q0 = \Q0~output_o ;

assign Q1 = \Q1~output_o ;

assign Q2 = \Q2~output_o ;

assign Q3 = \Q3~output_o ;

endmodule
